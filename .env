# Configurações da Twitch API e do Bot
TWITCH_CLIENT_ID=3tlz8vzjh4qz9070xd3qyggyibntpt
TWITCH_CLIENT_SECRET=wiudecps2wy1iuxl2wwn67xf4s6ps8
TWITCH_ACCESS_TOKEN=m13n0mk7348c3vjbjoi7u6ac6x8g7r
TWITCH_REFRESH_TOKEN=ee02z0e5nz1zdy2bocms44onxk0zwey7on90jtodl3g8tfch9h
TWITCH_USERNAME=charlievox
TWITCH_CHANNEL=charlievox


# URL para o EventSub (Webhooks da Twitch)
# Esta URL é para testes locais. Será atualizada para a URL do Render.com no deploy.
TWITCH_WEBHOOK_URL=http://localhost:3000/webhooks/twitch

# Configurações do Banco de Dados PostgreSQL (Render.com)
# Esta é a URL do seu banco de dados no Render.com.
# Mantenha USE_PG_SSL=false para testes locais, pois seu ambiente local pode não ter SSL.
DATABASE_URL="postgresql://twitch_bot_db_bjmm_user:GAnURaBqalKWwF4CFd7lTpdawwdV4CxI@dpg-d2q7e6je5dus73bobbeg-a.ohio-postgres.render.com/twitch_bot_db_bjmm"
USE_PG_SSL=true

WEB_PANEL_SECRET=332211

# Xbox API (Leia as observações no xboxApiService.js)
# Para este exemplo, usaremos uma estrutura genérica para uma API que usa Gamertag e uma chave.
# Se usar XboxAPI.com ou xbl.io, você precisa de uma chave e, possivelmente, um XUID.
XBOX_API_KEY=c09af54d-90f6-44f4-ad84-9d687230767e
XBOX_GAMERTAG=charlievox